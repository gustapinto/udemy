/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package kafka.streams.wikimedia;

import java.util.Properties;

import org.apache.kafka.common.serialization.Serdes;
import org.apache.kafka.streams.KafkaStreams;
import org.apache.kafka.streams.StreamsBuilder;
import org.apache.kafka.streams.StreamsConfig;
import org.apache.kafka.streams.Topology;
import org.apache.kafka.streams.kstream.KStream;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import kafka.streams.wikimedia.processors.BotCountProcessor;

public class App {
    private static final String INPUT_TOPIC = "wikimedia.recentchange";
    private static Logger logger = LoggerFactory.getLogger(App.class);

    public static void main(String[] args) {
        Properties properties = new Properties();
        properties.put(StreamsConfig.APPLICATION_ID_CONFIG, "wikimedia-stats-application");
        properties.put(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, "127.0.0.1:9092");
        properties.put(StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG, Serdes.String().getClass());
        properties.put(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serdes.String().getClass());

        StreamsBuilder streamsBuilder = new StreamsBuilder();
        KStream<String, String> stream = streamsBuilder.stream(INPUT_TOPIC);

        BotCountProcessor botCountProcessor = new BotCountProcessor(stream);
        botCountProcessor.process();

        Topology topology = streamsBuilder.build();

        logger.info("Topology: {}", topology.describe());

        try (KafkaStreams kafkaStreams = new KafkaStreams(topology, properties)) {
            kafkaStreams.start();
        }
    }
}
